package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommentsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentsAllPropertiesEquals(Comments expected, Comments actual) {
        assertCommentsAutoGeneratedPropertiesEquals(expected, actual);
        assertCommentsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentsAllUpdatablePropertiesEquals(Comments expected, Comments actual) {
        assertCommentsUpdatableFieldsEquals(expected, actual);
        assertCommentsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentsAutoGeneratedPropertiesEquals(Comments expected, Comments actual) {
        assertThat(actual)
            .as("Verify Comments auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentsUpdatableFieldsEquals(Comments expected, Comments actual) {
        assertThat(actual)
            .as("Verify Comments relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentsUpdatableRelationshipsEquals(Comments expected, Comments actual) {
        assertThat(actual)
            .as("Verify Comments relationships")
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()))
            .satisfies(a -> assertThat(a.getParentComment()).as("check parentComment").isEqualTo(expected.getParentComment()));
    }
}
