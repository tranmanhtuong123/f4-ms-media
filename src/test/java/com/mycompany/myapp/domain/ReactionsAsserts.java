package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReactionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionsAllPropertiesEquals(Reactions expected, Reactions actual) {
        assertReactionsAutoGeneratedPropertiesEquals(expected, actual);
        assertReactionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionsAllUpdatablePropertiesEquals(Reactions expected, Reactions actual) {
        assertReactionsUpdatableFieldsEquals(expected, actual);
        assertReactionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionsAutoGeneratedPropertiesEquals(Reactions expected, Reactions actual) {
        assertThat(actual)
            .as("Verify Reactions auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionsUpdatableFieldsEquals(Reactions expected, Reactions actual) {
        assertThat(actual)
            .as("Verify Reactions relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getReactionType()).as("check reactionType").isEqualTo(expected.getReactionType()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionsUpdatableRelationshipsEquals(Reactions expected, Reactions actual) {
        assertThat(actual)
            .as("Verify Reactions relationships")
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()))
            .satisfies(a -> assertThat(a.getComment()).as("check comment").isEqualTo(expected.getComment()));
    }
}
